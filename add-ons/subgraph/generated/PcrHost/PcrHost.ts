// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class PerpetualConditionalRewardCreated extends ethereum.Event {
  get params(): PerpetualConditionalRewardCreated__Params {
    return new PerpetualConditionalRewardCreated__Params(this);
  }
}

export class PerpetualConditionalRewardCreated__Params {
  _event: PerpetualConditionalRewardCreated;

  constructor(event: PerpetualConditionalRewardCreated) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get rewardToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): string {
    return this._event.parameters[2].value.toString();
  }

  get pcrId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get earliestProposalTimestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get optimisticOracleInput(): PerpetualConditionalRewardCreatedOptimisticOracleInputStruct {
    return changetype<
      PerpetualConditionalRewardCreatedOptimisticOracleInputStruct
    >(this._event.parameters[5].value.toTuple());
  }

  get tokenContract(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get optimisticOracleContract(): Address {
    return this._event.parameters[7].value.toAddress();
  }
}

export class PerpetualConditionalRewardCreatedOptimisticOracleInputStruct extends ethereum.Tuple {
  get finder(): Address {
    return this[0].toAddress();
  }

  get rewardAmount(): BigInt {
    return this[1].toBigInt();
  }

  get interval(): BigInt {
    return this[2].toBigInt();
  }

  get optimisticOracleLivenessTime(): BigInt {
    return this[3].toBigInt();
  }

  get priceIdentifier(): Bytes {
    return this[4].toBytes();
  }

  get customAncillaryData(): Bytes {
    return this[5].toBytes();
  }
}

export class PcrHost extends ethereum.SmartContract {
  static bind(address: Address): PcrHost {
    return new PcrHost("PcrHost", address);
  }
}
