/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MinimalContract,
  MinimalContractInterface,
} from "../MinimalContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "payload",
        type: "uint256",
      },
    ],
    name: "RewardCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_payload",
        type: "uint256",
      },
    ],
    name: "testEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101ec806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063dcd9c7fa14610030575b600080fd5b61004361003e366004610148565b610045565b005b60405181815233907fe3483177bd541fe7da6f8421b0b54fc121a0ca7c9abe2b67a1cbd16a8869f63a9060200160405180910390a26100b86040518060400160405280600b81526020017f656d6974207265776172640000000000000000000000000000000000000000008152506100bb565b50565b6100b8816040516024016100cf9190610161565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac0000000000000000000000000000000000000000000000000000000017905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006020828403121561015a57600080fd5b5035919050565b600060208083528351808285015260005b8181101561018e57858101830151858201604001528201610172565b818111156101a0576000604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212205787077c3a2f947bc8bd1ffa28f747d25f61a2321888d7f5292728d75f0fab3864736f6c634300080c0033";

type MinimalContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinimalContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MinimalContract__factory extends ContractFactory {
  constructor(...args: MinimalContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MinimalContract> {
    return super.deploy(overrides || {}) as Promise<MinimalContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MinimalContract {
    return super.attach(address) as MinimalContract;
  }
  connect(signer: Signer): MinimalContract__factory {
    return super.connect(signer) as MinimalContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalContractInterface {
    return new utils.Interface(_abi) as MinimalContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinimalContract {
    return new Contract(address, _abi, signerOrProvider) as MinimalContract;
  }
}
