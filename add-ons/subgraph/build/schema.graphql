enum RewardStep {
  Funding
  Pending
  Accepted
}

enum RewardStatus {
  Active
  Paused
  Removed
}

enum TargetCondition {
  GT
  GTE
  E
  LTE
  LT
}

enum ProposalStatus {
  Pending
  Accepted
  Rejected
}

type Reward @entity {
  id: ID!
  title: String
  url: String
  admin: User!

  rewardToken: String
  rewardAmount: BigInt!
  token: String

  currentdeposit: BigInt!
  rewardStatus: BigInt!
  rewardStep: BigInt!
  earliestNextAction: BigInt!

  interval: BigInt!
  target: BigInt!
  targetCondition: BigInt!
  rewardTargetHitory: [RewardTargetHitory!]! @derivedFrom(field: "reward")

  optimisticOracleLivenessTime: BigInt!
  priceIdentifier: Bytes
  customAncillaryData: Bytes

  totalDistributed: BigInt!
  currentIndex: BigInt!
  unitsIssued: BigInt!
  usersSubscriptions:BigInt!
  rewardIndexHistory: [RewardIndexHistory!]! @derivedFrom(field: "reward")


  currentProposal: Proposal

}

type User @entity {
 id:ID!
 rewardsCreated: [Reward!]! @derivedFrom(field: "admin")
 rewardsSubscriptions: [UserSubscription!]! @derivedFrom(field: "beneficiary")
 proposaslsSubmitted: [Proposal!]! @derivedFrom(field: "proposer")

}

type UserSubscription @entity {
  id: ID!
  beneficiary: User!
  units: BigInt!
}

type RewardTargetHitory @entity {
  id: ID!
  reward: Reward!
  target: BigInt
  targetCondition: BigInt
  timeStamp: BigInt
}

type RewardIndexHistory @entity {
  id: ID!
  reward: Reward!
  index: BigInt!
  timeStamp: BigInt!
}

type Proposal @entity {
  id: ID!
  proposer: User!
  startQualifying: BigInt!
  startProposePeriod: BigInt!
  startLivenessPeriod: BigInt!
  startExecutionPeriod: BigInt!
  reward: Reward!
  status: ProposalStatus
}

type ProposalSummary @entity {
  id: ID!
  reward: Reward!
  timeStamp: BigInt
  result: BigInt
}
